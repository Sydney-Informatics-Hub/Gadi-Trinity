#!/bin/bash
## ---------------------------------------------------------------------------
## TRINITY 2 - ASSEMBLING CLUSTERS OF READS
## Involves Inchworm, Chysalis and Butterfly
## Chrysalis and Butterfly can be executed in parallel, each having
## independant input/output
## Authors: Tracy Chew, Andrey Bliznyuk, Rika Kobayashi
## Suggested acknowledgement: "The authors acknowledge the scientific and/or technical 
## assistance of Tracy Chew of the Sydney Informatics Hub at the University of Sydney 
## and use of the National Computational Infrastructure facility."
## ---------------------------------------------------------------------------

# Process one of the Fb_?? directories, representing ~100,000 mostly
# short tasks


# Environment variables that need to be passed in with -v
# ${resources}
# ${tissue}
# ${io}
# ${fb}               : Fb_0 etc
# ${out}

cd ${io}

echo $resources
tar xf ${resources}/apps.tar -C /tmp/
export APPS_DIR=/tmp/
module use ${APPS_DIR}/apps/Modules/modulefiles
module load trinity/2.9.1
module load bowtie2/2.3.5.1
module load samtools/1.10
module load salmon/1.1.0
module load python2/2.7.17
module load jellyfish/2.3.0


finish(){
    echo "$(date): Copying data from jobFS to ${out}..."

    cd ${TRINITY_OUTDIR}/${tissue}_trinity_2.9.1
    tar cf ${out}/trinity_outdir_2_${fb}.tar read_partitions

    echo "$(date) : Finished trinity_2_.pbs for ${fb}"
}
trap finish EXIT

echo "$(date): Beginning recursive_trinity step on ${fb} directory: Assemble clusters of reads in parallel"

echo "Total number of CPUs: ${PBS_NCPUS}"

# Only untar the relevant fb directory
tar xf ${out}/trinity_outdir_1.tar -C ${PBS_JOBFS} */read_partitions/${fb}/ */recursive_trinity.cmds

export TRINITY_OUTDIR=${PBS_JOBFS}/trinity_outdir
cd ${TRINITY_OUTDIR}

echo "$(date): Currently in ${TRINITY_OUTDIR}"

# Re-write "partitioned_reads.files.list" so it has the correct paths
echo "$(date): Updating paths for partitioned_reads.files.list"
find ${PWD}/ -iname '*trinity.reads.fa' > ${tissue}_trinity_2.9.1/partitioned_reads.files.list
find ${PWD}/ -iname '*trinity.reads.fa'
head ${tissue}_trinity_2.9.1/partitioned_reads.files.list

# Re-write "recursive_trinity.cmds" so that it has correct paths
echo "$(date): Updating paths for recursive_trinity.cmds"
echo "before:" 
head ${tissue}_trinity_2.9.1/recursive_trinity.cmds
sed -i -e 's|\/jobfs\/[0-9]\+\.gadi-pbs|'${PBS_JOBFS}'|g' ${tissue}_trinity_2.9.1/recursive_trinity.cmds
echo "after:"
head ${tissue}_trinity_2.9.1/recursive_trinity.cmds

# Select relevant commands
grep ${fb}/ ${tissue}_trinity_2.9.1/recursive_trinity.cmds > ${tissue}_trinity_2.9.1/recursive_trinity.${fb}.cmds

${io}/Scripts/sort-recursive.py ${tissue}_trinity_2.9.1/recursive_trinity.${fb}.cmds

export OMP_PROC_BIND=TRUE
${TRINITY_HOME}/trinity-plugins/ParaFly-0.1.0/bin/ParaFly -c ${tissue}_trinity_2.9.1/recursive_trinity.${fb}.cmds.sorted -CPU ${PBS_NCPUS}

